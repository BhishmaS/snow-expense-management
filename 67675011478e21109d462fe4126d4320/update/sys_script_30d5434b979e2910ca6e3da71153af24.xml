<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_expense_mng_expense_claims</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_expense_mng_expense_claims">approval_status=2^ORapproval_status=3^EQ<item display_value="Approved" endquery="false" field="approval_status" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item display_value="Rejected" endquery="false" field="approval_status" goto="false" newquery="false" operator="=" or="true" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Expenses Status</name>
        <order>300</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    try {
        var expenseIds = current.expenseids.split(',');
        var expenseGR = new GlideRecord('x_snc_expense_mng_expense');
        expenseGR.addQuery('sys_id', 'IN', expenseIds);
        expenseGR.query();

        while (expenseGR.next()) {
            expenseGR.approval_status = current.approval_status;
			expenseGR.approved_by = gs.getUserID();
			expenseGR.approved_at = new GlideDateTime();
            expenseGR.update();
        }
		
		current.approved_by = gs.getUserID();
		current.approved_at = new GlideDateTime();
		current.update();
    } catch (err) {
        gs.error("Expenses: A runtime error occurred while changing expenses status" + err);

        gs.addErrorMessage("An error occurred while changing expenses status");
        current.setAbortAction(true);
	}


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-24 06:34:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>30d5434b979e2910ca6e3da71153af24</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Update Expenses Status</sys_name>
        <sys_overrides/>
        <sys_package display_value="Expense Management" source="x_snc_expense_mng">67675011478e21109d462fe4126d4320</sys_package>
        <sys_policy/>
        <sys_scope display_value="Expense Management">67675011478e21109d462fe4126d4320</sys_scope>
        <sys_update_name>sys_script_30d5434b979e2910ca6e3da71153af24</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-24 19:35:31</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=30d5434b979e2910ca6e3da71153af24"/>
</record_update>
